{"version":3,"sources":["Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","state","todos","currentPage","todosPerPage","upperPageBound","lowerPageBound","isPrevBtnActive","isNextBtnActive","pageBound","handleClick","bind","btnDecrementClick","btnIncrementClick","btnNextClick","btnPrevClick","setPrevAndNextBtnClass","$","removeClass","this","addClass","event","listid","Number","target","id","setState","totalPage","Math","ceil","length","indexOfLastTodo","indexOfFirstTodo","renderTodos","slice","map","todo","index","pageNumbers","i","push","renderPageNumbers","number","className","href","onClick","pageIncrementBtn","pageDecrementBtn","renderPrevBtn","renderNextBtn","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffeb9295.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport $, { event } from 'jquery';\r\n\r\nclass Pagination extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        todos: ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'],\r\n        currentPage: 1,\r\n        todosPerPage: 3,\r\n        upperPageBound: 3,\r\n        lowerPageBound: 0,\r\n        isPrevBtnActive: 'disabled',\r\n        isNextBtnActive: '',\r\n        pageBound: 3\r\n      };\r\n      this.handleClick = this.handleClick.bind(this);\r\n      this.btnDecrementClick = this.btnDecrementClick.bind(this);\r\n      this.btnIncrementClick = this.btnIncrementClick.bind(this);\r\n      this.btnNextClick = this.btnNextClick.bind(this);\r\n      this.btnPrevClick = this.btnPrevClick.bind(this);\r\n      // this.componentDidMount = this.componentDidMount.bind(this);\r\n      this.setPrevAndNextBtnClass = this.setPrevAndNextBtnClass.bind(this);\r\n    }\r\n    componentDidUpdate() {\r\n          $(\"ul li.active\").removeClass('active');\r\n          $('ul li#'+this.state.currentPage).addClass('active');\r\n    }\r\n    handleClick(event) {\r\n      let listid = Number(event.target.id);\r\n      this.setState({\r\n        currentPage: listid\r\n      });\r\n      $(\"ul li.active\").removeClass('active');\r\n      $('ul li#'+listid).addClass('active');\r\n      this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    setPrevAndNextBtnClass(listid) {\r\n      let totalPage = Math.ceil(this.state.todos.length / this.state.todosPerPage);\r\n      this.setState({isNextBtnActive: 'disabled'});\r\n      this.setState({isPrevBtnActive: 'disabled'});\r\n      if(totalPage === listid && totalPage > 1){\r\n          this.setState({isPrevBtnActive: ''});\r\n      }\r\n      else if(listid === 1 && totalPage > 1){\r\n          this.setState({isNextBtnActive: ''});\r\n      }\r\n      else if(totalPage > 1){\r\n          this.setState({isNextBtnActive: ''});\r\n          this.setState({isPrevBtnActive: ''});\r\n      }\r\n  }\r\n    btnIncrementClick() {\r\n        this.setState({upperPageBound: this.state.upperPageBound + this.state.pageBound});\r\n        this.setState({lowerPageBound: this.state.lowerPageBound + this.state.pageBound});\r\n        let listid = this.state.upperPageBound + 1;\r\n        this.setState({ currentPage: listid});\r\n        this.setPrevAndNextBtnClass(listid);\r\n  }\r\n    btnDecrementClick() {\r\n      this.setState({upperPageBound: this.state.upperPageBound - this.state.pageBound});\r\n      this.setState({lowerPageBound: this.state.lowerPageBound - this.state.pageBound});\r\n      let listid = this.state.upperPageBound - this.state.pageBound;\r\n      this.setState({ currentPage: listid});\r\n      this.setPrevAndNextBtnClass(listid);\r\n  }\r\n  btnPrevClick() {\r\n      if((this.state.currentPage -1)%this.state.pageBound === 0 ){\r\n          this.setState({upperPageBound: this.state.upperPageBound - this.state.pageBound});\r\n          this.setState({lowerPageBound: this.state.lowerPageBound - this.state.pageBound});\r\n      }\r\n      let listid = this.state.currentPage - 1;\r\n      this.setState({ currentPage : listid});\r\n      this.setPrevAndNextBtnClass(listid);\r\n  }\r\n  btnNextClick() {\r\n      if((this.state.currentPage +1) > this.state.upperPageBound ){\r\n          this.setState({upperPageBound: this.state.upperPageBound + this.state.pageBound});\r\n          this.setState({lowerPageBound: this.state.lowerPageBound + this.state.pageBound});\r\n      }\r\n      let listid = this.state.currentPage + 1;\r\n      this.setState({ currentPage : listid});\r\n      this.setPrevAndNextBtnClass(listid);\r\n  }\r\n    render() {\r\n      const { todos, currentPage, todosPerPage,upperPageBound,lowerPageBound,isPrevBtnActive,isNextBtnActive } = this.state;\r\n      // Logic for displaying current todos\r\n      const indexOfLastTodo = currentPage * todosPerPage;\r\n      const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\r\n      const currentTodos = todos.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\r\n      const renderTodos = currentTodos.map((todo, index) => {\r\n        return <li key={index}>{todo}</li>;\r\n      });\r\n\r\n      // Logic for displaying page numbers\r\n      const pageNumbers = [];\r\n      for (let i = 1; i <= Math.ceil(todos.length / todosPerPage); i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n\r\n      const renderPageNumbers = pageNumbers.map(number => {\r\n          if(number === 1 && currentPage === 1){\r\n              return(\r\n                  <li key={number} className='active' id={number}><a href='#' id={number} onClick={this.handleClick}>{number}</a></li>\r\n              )\r\n          }\r\n          else if((number < upperPageBound + 1) && number > lowerPageBound){\r\n              return(\r\n                  <li key={number} id={number}><a href='#' id={number} onClick={this.handleClick}>{number}</a></li>\r\n              )\r\n          }\r\n      });\r\n      let pageIncrementBtn = null;\r\n      if(pageNumbers.length > upperPageBound){\r\n          pageIncrementBtn = <li className=''><a href='#' onClick={this.btnIncrementClick}> &hellip; </a></li>\r\n      }\r\n      let pageDecrementBtn = null;\r\n      if(lowerPageBound >= 1){\r\n          pageDecrementBtn = <li className=''><a href='#' onClick={this.btnDecrementClick}> &hellip; </a></li>\r\n      }\r\n      let renderPrevBtn = null;\r\n      if(isPrevBtnActive === 'disabled') {\r\n          renderPrevBtn = <li className={isPrevBtnActive}><span id=\"btnPrev\"> Prev </span></li>\r\n      }\r\n      else{\r\n          renderPrevBtn = <li className={isPrevBtnActive}><a href='#' id=\"btnPrev\" onClick={this.btnPrevClick}> Prev </a></li>\r\n      }\r\n      let renderNextBtn = null;\r\n      if(isNextBtnActive === 'disabled') {\r\n          renderNextBtn = <li className={isNextBtnActive}><span id=\"btnNext\"> Next </span></li>\r\n      }\r\n      else{\r\n          renderNextBtn = <li className={isNextBtnActive}><a href='#' id=\"btnNext\" onClick={this.btnNextClick}> Next </a></li>\r\n      }\r\n      return (\r\n        <div>\r\n            <ul>\r\n            {renderTodos}\r\n          </ul>\r\n          <ul id=\"page-numbers\" className=\"pagination\">\r\n            {renderPrevBtn}\r\n            {pageDecrementBtn}\r\n            {renderPageNumbers}\r\n            {pageIncrementBtn}\r\n            {renderNextBtn}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n// class Pagination extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             todos: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'],\r\n//             currentPage: 1,\r\n//             todosPerPage: 3,\r\n//             upperPageBound: 3,\r\n//             lowerPageBound: 0,\r\n//             isPrevBtnActive: 'disabled',\r\n//             isNextBtnActive: '',\r\n//             pageBound: 3\r\n//         }\r\n//         this.handleClick = this.handleClick.bind(this);\r\n//     }\r\n//     handleClick(event){\r\n//         this.setState({\r\n//             currentPage: Number(event.target.id)\r\n//         })\r\n//     }\r\n//     btnPrevClick(){\r\n//         if((this.state.currentPage - 1) % this.state.pageBound === 0){\r\n\r\n//         }\r\n//     }\r\n//     render() {\r\n//         const { todos, currentPage, todosPerPage,upperPageBound,lowerPageBound } = this.state;\r\n\r\n//         const indexOfLastTodo = currentPage * todosPerPage;\r\n//         const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\r\n//         const currentTodos = todos.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\r\n//         const renderTodos = currentTodos.map((todo, index) => {\r\n//             return <li key={index}>{todo}</li>\r\n//         })\r\n\r\n//         const pageNumbers = [];\r\n//         for (let i = 1; i <= Math.ceil(todos.length / todosPerPage); i++) {\r\n//             pageNumbers.push(i);\r\n//         }\r\n\r\n//         const renderPageNumbers = pageNumbers.map((number) => {\r\n//            if(number === 1 && currentPage === 1){\r\n//                return <li id={number} onClick={this.handleClick}>{number}</li>\r\n//            }else if((number < upperPageBound + 1) && number > lowerPageBound){\r\n//                return <li id={number} onClick={this.handleClick}>{number}</li>\r\n//            }\r\n//         })\r\n//         let pageIncrementBtn = null;\r\n//         if(pageNumbers.length > upperPageBound){\r\n//             pageIncrementBtn = <li className=''><a href=\"#\" onClick={this.btnIncrementClick}>&hellip;</a></li>;\r\n//         }\r\n         \r\n//         let pageDecrementBtn = null;\r\n//         if(pageNumbers.length >= 1){\r\n//             pageDecrementBtn = <li className=''><a href=\"#\" onClick={this.btnIncrementClick}>&hellip;</a></li>;\r\n//         }\r\n\r\n//         let renderPrevBtn = null;\r\n//         if(isPrevBtnActive === 'disabled'){\r\n//             renderPrevBtn = <li className={isPrevBtnActive}><span id=\"btnPrev\">Prev</span></li>;\r\n//         }else{\r\n//             renderPrevBtn = <li className={isPrevBtnActive}><a href=\"#\" onClick={this.btnPrevClick}>Prev</a></li>\r\n//         }\r\n\r\n\r\n//         return (\r\n//             <div>\r\n//                 <ul>\r\n//                     {renderTodos}\r\n//                 </ul>\r\n//                 <ul id=\"page-numbers\" className=\"pagination\">\r\n//                     {renderPageNumbers}\r\n//                 </ul>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default Pagination;","// import TodoApp from './TodoApp';\nimport Pagination from './Pagination';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      pagination\n      <Pagination/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}